spring.application.name=fitness-center-app
# Spring Boot application properties

# Server Configuration
# You can change the port your Spring Boot application runs on.
# Default is 8080. If that port is in use, you can change it here.
# For example, to run on port 8081:
server.port=8080

# Application Name (Optional, but good practice)
# This name might be used in logs or management endpoints.

# Logging Configuration (Optional)
# You can set the logging level for your application or specific packages.
# For example, to see more detailed DEBUG messages from your application's packages:
# logging.level.com.yourfitnesscenter.fitnesscenterbackend=DEBUG
# Default logging level is INFO.

# Spring Boot DevTools (Optional Configuration)
# If you have spring-boot-devtools, it enables features like automatic restart.
# You can disable restart if needed (though usually it's helpful during development).
# spring.devtools.restart.enabled=true

# File Encoding (Good practice to ensure consistency, especially with file I/O)
# Spring Boot typically defaults to UTF-8, but explicitly setting it can be beneficial.
# server.servlet.encoding.charset=UTF-8
# server.servlet.encoding.enabled=true
# server.servlet.encoding.force=true
# spring.mandatory-file-encoding=UTF-8


# For your project, since you are not using a database,
# you do NOT need spring.datasource.* properties.

# If you were serving static content (like your HTML/CSS/JS frontend) directly
# from this Spring Boot application (which is an alternative to running them separately),
# you might add configurations related to static resource locations, but based on our
# current plan, your frontend is separate.
# Example for static content (not currently needed for your setup):
# spring.web.resources.static-locations=classpath:/static/,classpath:/public/

# --- End of application.properties ---
